---
test:
  name: healthcare
  description: This is an example benchmark for caliper, to test the backend DLT's
    performance with simple account opening & querying transactions
  workers:
    type: local
    number: 1
  rounds:
  - label: create
    description: Create asset dicom
    txNumber: 100
    rateControl:
      type: linear-rate
      opts:
        startingTps: 50
        finishingTps: 250
    arguments:
      dicom: 10
    callback: benchmarks/scenario/simple/bcshield/create-asset.js
  - label: query
    description: Query dicom asset
    txNumber: 100
    rateControl:
      type: linear-rate
      opts:
        startingTps: 50
        finishingTps: 250
    callback: benchmarks/scenario/simple/bcshield/get-asset.js
#   - label: transfer
#     description: Test description for transfering money between accounts
#     txNumber: 100
#     rateControl:
#           type: fixed-rate
#           opts:
#               tps: 50
#     arguments:
#         money: 100
#     callback: benchmarks/scenario/simple/transfer.js
# monitor:
# ---
# test:
#   workers:
#     type: local
#     number: 1
#   rounds:
#     - label: add asset
#       description: >-
#         Test description for the opening of an account through the deployed
#         chaincode
#       txNumber: 100
#       rateControl:
#         type: fixed-rate
#         opts:
#           tps: 50
#       callback: benchmarks/scenario/simple/bcshield/create-asset.js
#       arguments:
#         txnPerBatch: 100
#     - label: query asset
#       description:  >-
#          Query a asset on blockchain
#       txNumber: 100
#       rateControl:
#         type: fixed-rate
#         opts:
#           tps: 50
#       callback: benchmarks/scenario/simple/bcshield/get-asset.js
  #      module: benchmarks/samples/fabric/fabcar/open-create.js
  # - label: query
  #   description: Test description for the query performance of the deployed chaincode
  #   txNumber: 1000
  #   rateControl:
  #     type: fixed-rate
  #     opts:
  #       tps: 50
  #   callback: benchmarks/scenario/simple/bcshield/query.js
  # - label: transfer
  #   description: Test description for transfering money between accounts
  #   txNumber: 100
  #   rateControl:
  #         type: fixed-rate
  #         opts:
  #             tps: 50
  #   arguments:
  #       money: 100
  #   callback: benchmarks/scenario/simple/transfer.js
monitor:
  type:
  - docker
  docker:
    name:
    - all 
    charting:
      bar:
        metrics: [Memory(avg), CPU%(avg)]
  interval: 1